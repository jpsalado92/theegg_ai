%PDF-1.3
1 0 obj
<< /Type /Catalog
/Outlines 2 0 R
/Pages 3 0 R >>
endobj
2 0 obj
<< /Type /Outlines /Count 0 >>
endobj
3 0 obj
<< /Type /Pages
/Kids [6 0 R
29 0 R
46 0 R
]
/Count 3
/Resources <<
/ProcSet 4 0 R
/Font << 
/F1 8 0 R
/F2 9 0 R
/F3 10 0 R
/F4 31 0 R
>>
/XObject << 
/I1 11 0 R
/I2 12 0 R
>>
>>
/MediaBox [0.000 0.000 595.280 841.890]
 >>
endobj
4 0 obj
[/PDF /Text /ImageC ]
endobj
5 0 obj
<<
/Creator (DOMPDF)
/CreationDate (D:20210526175439+02'00')
/ModDate (D:20210526175439+02'00')
/Title (PDF tarea 52)
/Subject (Todo programa inform·tico trabaja con diferentes tipos de datos estructurados y es importante conocer las diferentes tipologÌas y para quÈ se utilizan)
>>
endobj
6 0 obj
<< /Type /Page
/Parent 3 0 R
/Annots [ 13 0 R 15 0 R 17 0 R 19 0 R 21 0 R 23 0 R 25 0 R 27 0 R ]
/Contents 7 0 R
>>
endobj
7 0 obj
<<
/Length 6920 >>
stream

0.000 0.529 0.349 rg
2.250 716.737 590.780 122.903 re f
1.000 1.000 1.000 rg
BT 19.500 801.574 Td /F2 10.5 Tf  [(JuanpabloSalado)] TJ ET
BT 19.500 779.682 Td /F1 9.0 Tf  [(Nivel: 1)] TJ ET
BT 19.500 768.693 Td /F1 9.0 Tf  [(Tipo: individual)] TJ ET
BT 19.500 757.704 Td /F1 9.0 Tf  [(Modo: obligatorio)] TJ ET
BT 19.500 746.715 Td /F1 9.0 Tf  [(Dificultad: intermedio)] TJ ET
q
48.000 0 0 39.360 274.926 758.508 cm /I2 Do
Q
BT 430.666 790.585 Td /F2 10.5 Tf  [(Skootik Mobile Technologies)] TJ ET
BT 501.251 768.693 Td /F1 9.0 Tf  [(https://skootik.com)] TJ ET
BT 504.626 757.704 Td /F1 9.0 Tf  [(info@skootik.com)] TJ ET
0.953 0.576 0.224 rg
2.250 663.213 590.780 51.274 re f
1.000 1.000 1.000 rg
BT 35.206 691.421 Td /F2 10.5 Tf  [(Todo programa inform·tico trabaja con diferentes tipos de datos estructurados y es importante conocer )] TJ ET
BT 182.647 678.564 Td /F2 10.5 Tf  [(las diferentes tipologÌas y para quÈ se utilizan)] TJ ET
0.000 0.000 0.000 rg
BT 220.621 614.040 Td /F2 18.0 Tf  [(Estructura de datos)] TJ ET
0.000 0.000 0.000 RG
0.36 w 0 J [  ] 0 d
220.621 611.182 m 389.659 611.182 l S
BT 15.000 567.983 Td /F3 12.0 Tf  [("En ciencias de la computaciÛn, una estructura de datos es una forma particular de organizar datos en )] TJ ET
BT 15.000 553.331 Td /F3 12.0 Tf  [(una computadora para que puedan ser utilizados de manera eficiente. Diferentes tipos de estructuras de )] TJ ET
BT 15.000 538.679 Td /F3 12.0 Tf  [(datos son adecuados para diferentes tipos de aplicaciones, y algunos son altamente especializados para )] TJ ET
BT 15.000 524.027 Td /F3 12.0 Tf  [(tareas especÌficas.)] TJ ET
BT 15.000 494.975 Td /F3 12.0 Tf  [(Las estructuras de datos son un medio para manejar grandes cantidades de datos de manera eficiente )] TJ ET
BT 15.000 480.323 Td /F3 12.0 Tf  [(para usos tales como grandes bases de datos y servicios de indizaciÛn de Internet. Por lo general, las )] TJ ET
BT 15.000 465.671 Td /F3 12.0 Tf  [(estructuras de datos eficientes son clave para diseÒar algoritmos eficientes. Algunos mÈtodos formales )] TJ ET
BT 15.000 451.019 Td /F3 12.0 Tf  [(de diseÒo y lenguajes de programaciÛn destacan las estructuras de datos, en lugar de los algoritmos, )] TJ ET
BT 15.000 436.367 Td /F3 12.0 Tf  [(como el factor clave de organizaciÛn en el diseÒo de software.")] TJ ET
BT 354.084 436.367 Td /F2 12.0 Tf  [(Wikipedia)] TJ ET
BT 15.000 407.315 Td /F1 12.0 Tf  [(Las estructuras de datos son ˙tiles porque nos permiten tener una baterÌa de herramientas para )] TJ ET
BT 15.000 392.663 Td /F1 12.0 Tf  [(solucionar ciertos tipos de problemas. Nos permiten desarrollar softwares m·s eficientes optimizando los )] TJ ET
BT 15.000 378.011 Td /F1 12.0 Tf  [(recursos disponibles. Depende que algoritmo queramos ejecutar, habr· veces que sea mejor utilizar una )] TJ ET
BT 15.000 363.359 Td /F1 12.0 Tf  [(estructura de datos u otra estructura que nos permita calcular todo a m·s velocidad. Estas son algunas )] TJ ET
BT 15.000 348.707 Td /F1 12.0 Tf  [(de las estructuras m·s utilizadas:)] TJ ET
BT 15.000 319.655 Td /F2 12.0 Tf  [(1.- Array: )] TJ ET
BT 71.016 319.655 Td /F1 12.0 Tf  [( Los arrays son una estructura que almacena los datos un elemento al lado del otro y podemos )] TJ ET
BT 15.000 305.003 Td /F1 12.0 Tf  [(tener arrays unidimensionales \(x\), bidimensionales \(x*y\) o incluso multidimensionales \(x*y*z\). )] TJ ET
BT 514.464 305.003 Td /F1 12.0 Tf  [(Imagen)] TJ ET
0.24 w 0 J [  ] 0 d
514.464 303.468 m 554.484 303.468 l S
BT 15.000 290.351 Td /F2 12.0 Tf  [(2.- Listas enlazadas:)] TJ ET
BT 131.712 290.351 Td /F1 12.0 Tf  [( Cada elemento apunta al siguiente excepto el ˙ltimo que no tiene sucesor y el )] TJ ET
BT 15.000 275.699 Td /F1 12.0 Tf  [(valor del enlace es null. Por ello los elementos son registros que contienen el dato a almacenar y un )] TJ ET
BT 15.000 261.047 Td /F1 12.0 Tf  [(enlace \(direcciÛn de memoria\) al siguiente elemento, de modo que el puntero saltar· de direcciÛn en )] TJ ET
BT 15.000 246.395 Td /F1 12.0 Tf  [(direcciÛn sin necesidad de buscar uno por uno. Los elementos de una lista, suelen recibir tambiÈn el )] TJ ET
BT 15.000 231.743 Td /F1 12.0 Tf  [(nombre de nodos de la lista. )] TJ ET
BT 169.080 231.743 Td /F1 12.0 Tf  [(Imagen)] TJ ET
0.24 w 0 J [  ] 0 d
169.080 230.208 m 209.100 230.208 l S
BT 15.000 217.091 Td /F2 12.0 Tf  [(3.- Pilas: )] TJ ET
BT 67.692 217.091 Td /F1 12.0 Tf  [( Son listas que tienen la particularidad de sÛlo poder eliminar o insertar en la cima de la lista. A )] TJ ET
BT 15.000 202.439 Td /F1 12.0 Tf  [(estas acciones se le conocen como apilar y desapilar y conlleva a que el ˙ltimo elemento que ingresa a )] TJ ET
BT 15.000 187.787 Td /F1 12.0 Tf  [(la pila sea el primero en salir \()] TJ ET
BT 175.044 187.787 Td /F1 12.0 Tf  [(LIFO)] TJ ET
0.24 w 0 J [  ] 0 d
175.044 186.252 m 201.720 186.252 l S
BT 201.720 187.787 Td /F1 12.0 Tf  [(\). )] TJ ET
BT 212.388 187.787 Td /F1 12.0 Tf  [(Imagen)] TJ ET
0.24 w 0 J [  ] 0 d
212.388 186.252 m 252.408 186.252 l S
BT 15.000 173.135 Td /F2 12.0 Tf  [(3.- Colas: )] TJ ET
BT 72.348 173.135 Td /F1 12.0 Tf  [(Es una secuencia de elementos donde la operaciÛn de inserciÛn se realiza por un extremo y la )] TJ ET
BT 15.000 158.483 Td /F1 12.0 Tf  [(operaciÛn de extracciÛn por el otro \()] TJ ET
BT 207.084 158.483 Td /F1 12.0 Tf  [(FIFO)] TJ ET
0.24 w 0 J [  ] 0 d
207.084 156.948 m 234.420 156.948 l S
BT 234.420 158.483 Td /F1 12.0 Tf  [(\). )] TJ ET
BT 245.088 158.483 Td /F1 12.0 Tf  [(Imagen)] TJ ET
0.24 w 0 J [  ] 0 d
245.088 156.948 m 285.108 156.948 l S
BT 15.000 143.831 Td /F2 12.0 Tf  [(5.- Grafos: )] TJ ET
BT 78.348 143.831 Td /F1 12.0 Tf  [(Los datos contienen, en algunos casos, relaciones entre ellos que no es necesariamente )] TJ ET
BT 15.000 129.179 Td /F1 12.0 Tf  [(jer·rquica. Esta es una estructura de datos no lineal. Por ejemplo, supongamos que unas lÌneas aÈreas )] TJ ET
BT 15.000 114.527 Td /F1 12.0 Tf  [(realizan vuelos sÛlo entre ciudades conectadas por lÌneas. La estructura de datos que refleja esta )] TJ ET
BT 15.000 99.875 Td /F1 12.0 Tf  [(relaciÛn recibe el nombre de grafo. )] TJ ET
BT 203.748 99.875 Td /F1 12.0 Tf  [(Imagen)] TJ ET
0.24 w 0 J [  ] 0 d
203.748 98.340 m 243.768 98.340 l S
BT 15.000 85.223 Td /F2 12.0 Tf  [(6.- ¡rboles:)] TJ ET
BT 81.012 85.223 Td /F1 12.0 Tf  [( En ciencias de la computaciÛn y en inform·tica, un ·rbol es una estructura de datos que )] TJ ET
BT 15.000 70.571 Td /F1 12.0 Tf  [(imita la estructura jer·rquica de un ·rbol, con un valor en la raÌz y sub·rboles con un nodo padre. )] TJ ET
BT 535.248 70.571 Td /F1 12.0 Tf  [(Imagen)] TJ ET
0.24 w 0 J [  ] 0 d
535.248 69.036 m 575.268 69.036 l S
BT 15.000 41.519 Td /F1 12.0 Tf  [(Estas estructuras de datos se pueden organizar de diferente modo para poder manipular, buscar e )] TJ ET
BT 15.000 26.867 Td /F1 12.0 Tf  [(insertar estos datos de manera eficiente. Algunas de las operaciones con Estructuras de datos m·s )] TJ ET
endstream
endobj
8 0 obj
<< /Type /Font
/Subtype /Type1
/Name /F1
/BaseFont /Helvetica
/Encoding /WinAnsiEncoding
>>
endobj
9 0 obj
<< /Type /Font
/Subtype /Type1
/Name /F2
/BaseFont /Helvetica-Bold
/Encoding /WinAnsiEncoding
>>
endobj
10 0 obj
<< /Type /Font
/Subtype /Type1
/Name /F3
/BaseFont /Helvetica-Oblique
/Encoding /WinAnsiEncoding
>>
endobj
11 0 obj
<<
/Type /XObject
/Subtype /Image
/Width 50
/Height 41
/Filter /FlateDecode
/DecodeParms << /Predictor 15 /Colors 1 /Columns 50 /BitsPerComponent 8>>
/ColorSpace /DeviceGray
/BitsPerComponent 8
/Length 874>>
stream
HâïUD„aÕL&ôìLíIˆGŒúIÊ+˘Jí$I¶?299Ir˙„‰Ã9…ú$'ô…‰L2g&gr˙„díô$…díd2ìôÃW&˜ºﬂkmﬂuÓÛ«˚>ÔÛ>üÔÛ<Ô˚|üó±
4ço¡ëOÁ]&ˆ/8ÉOd¸ò:ª8ªÊäQOÛkÎ ∆l ßl}ã1âh±1c=∆òÑ¥ß*ÉÌ».Èª˙,ÍnÑÅ'oCÌ∆2Ó∫Î˘∑˘Ä‹\µvw≠ıÑñU Óx°≤∂WÑÆ=‡c•‚£ÚÏ‡ácm◊%M=!Úú—¬ÚÏ¬ç«˜˙é⁄„∏,Gèy≈4çY‘ãn´"M`[]\Í<*‘ÕË+n-≤pª¢ÈÁE2≥!e
tE∂ﬂ˜ük8>$¯dEÜi^÷—E6è1w∑ç≠Nk4NaY]cà∆ÀÂs:ç‘O†©öb»ÄÓ'Ä>u=àÄ—›ù(2vñö¡E4o¨q”è$O≈¶.ìîÀ⁄!ùXÊT· ¢Œ$·d%É∂4≠ü˚-∆ºA÷∏{1o–°å`ì·Rg£>Ã∏a8˘/
ª√Y≈z<∏5°Hc¡≠EöF+LéQÈ≈„ó£‚4Ósiü$”óˆû”∫&J™º
!ÔÛÂ∞√%ÑÈw1vÈÜ6üsπcí§≠:…ÆW ÎñF‡=cstóVÄ"ù¥_bàj‚ZIèBÖ√Ö4W‹¬.*RQ.é8Ê/ﬂæ$b˚âÛìvÚtÒñ:ﬁ"OmßµÑ≈F‡ß5Øf°˜W∫ïôÔq$ä	†áæˇGñ˙µ‰]Ù≈µß;ØP#Âhï¿‘Í>Gá∆ÅCëKÔBπÎ#©ÌÓdØ®YÙr≠W=ﬁi¯ü/™≠Môvø˜8êöò5¥—„‹A¡ÃxÃ™rVuª<0…Xü"çìrÖ.uª’ÊNib0ÉÁ
Hπ{C∆Vﬁø—Œ£APãƒÿ+–8ë«~E0N<Xk8/–Ò¯ÚB≥ÄÃk=Ÿ‚í=UJnªt≠	m^	“ßZ˝20´K)$¨Î>J‡b≤ZÈZ°„ ØË7vjè⁄ı∑*O£©]òè»¡¡§ŒVÜì«Ä˛"ßπXä}h{≈^F≥€ü,…U(ùÑE≥æ’_`2
endstream
endobj
12 0 obj
<<
/Type /XObject
/Subtype /Image
/Width 50
/Height 41
/SMask 11 0 R
/Filter /FlateDecode
/DecodeParms << /Predictor 15 /Colors 3 /Columns 50 /BitsPerComponent 8>>
/ColorSpace /DeviceRGB
/BitsPerComponent 8
/Length 70>>
stream
XÖÌŒ1Ä0 ±Rˇû,7ÒC¢ œÃú}ÓﬂÅoZÖV°UhZÖV°UhZÖV°UhZÖV°UhZÖV°U,mΩ:£O
endstream
endobj
13 0 obj
<< /Type /Annot
/Subtype /Link
/A 14 0 R
/Border [0 0 0]
/H /I
/Rect [ 514.4640 303.8930 554.4840 316.1030 ]
>>
endobj
14 0 obj
<< /Type /Action
/S /URI
/URI (https://miro.medium.com/max/3184/1*X0Dg7QfSYtWhSAu-afi8-g.png)
>>
endobj
15 0 obj
<< /Type /Annot
/Subtype /Link
/A 16 0 R
/Border [0 0 0]
/H /I
/Rect [ 169.0800 230.6330 209.1000 242.8430 ]
>>
endobj
16 0 obj
<< /Type /Action
/S /URI
/URI (https://4.bp.blogspot.com/-EDYnoM-EiUQ/WNk3TpX5D4I/AAAAAAAAFNo/m14erky0bpMIpj7cgq5AFdKC89QNDk43QCLcB/s1600/01+ListasSimplementeEnlazadas.jpg)
>>
endobj
17 0 obj
<< /Type /Annot
/Subtype /Link
/A 18 0 R
/Border [0 0 0]
/H /I
/Rect [ 175.0440 186.6770 201.7200 198.8870 ]
>>
endobj
18 0 obj
<< /Type /Action
/S /URI
/URI (https://es.wikipedia.org/wiki/Last_in,_first_out)
>>
endobj
19 0 obj
<< /Type /Annot
/Subtype /Link
/A 20 0 R
/Border [0 0 0]
/H /I
/Rect [ 212.3880 186.6770 252.4080 198.8870 ]
>>
endobj
20 0 obj
<< /Type /Action
/S /URI
/URI (https://upload.wikimedia.org/wikipedia/commons/thumb/d/d1/Pila.svg/1200px-Pila.svg.png)
>>
endobj
21 0 obj
<< /Type /Annot
/Subtype /Link
/A 22 0 R
/Border [0 0 0]
/H /I
/Rect [ 207.0840 157.3730 234.4200 169.5830 ]
>>
endobj
22 0 obj
<< /Type /Action
/S /URI
/URI (https://es.wikipedia.org/wiki/First_in,_first_out)
>>
endobj
23 0 obj
<< /Type /Annot
/Subtype /Link
/A 24 0 R
/Border [0 0 0]
/H /I
/Rect [ 245.0880 157.3730 285.1080 169.5830 ]
>>
endobj
24 0 obj
<< /Type /Action
/S /URI
/URI (https://upload.wikimedia.org/wikipedia/commons/thumb/b/bb/Cola.svg/1200px-Cola.svg.png)
>>
endobj
25 0 obj
<< /Type /Annot
/Subtype /Link
/A 26 0 R
/Border [0 0 0]
/H /I
/Rect [ 203.7480 98.7650 243.7680 110.9750 ]
>>
endobj
26 0 obj
<< /Type /Action
/S /URI
/URI (https://upload.wikimedia.org/wikipedia/commons/5/5b/6n-graf.svg)
>>
endobj
27 0 obj
<< /Type /Annot
/Subtype /Link
/A 28 0 R
/Border [0 0 0]
/H /I
/Rect [ 535.2480 69.4610 575.2680 81.6710 ]
>>
endobj
28 0 obj
<< /Type /Action
/S /URI
/URI (https://upload.wikimedia.org/wikipedia/commons/f/f7/Binary_tree.svg)
>>
endobj
29 0 obj
<< /Type /Page
/Parent 3 0 R
/Annots [ 32 0 R 34 0 R 36 0 R 38 0 R 40 0 R 42 0 R 44 0 R ]
/Contents 30 0 R
>>
endobj
30 0 obj
<<
/Length 5777 >>
stream

0.000 0.000 0.000 rg
0.000 0.000 0.000 RG
0.24 w 0 J [  ] 0 d
BT 15.000 830.168 Td /F1 12.0 Tf  [(comunes son las definidas a continuaciÛn:)] TJ ET
BT 15.000 801.116 Td /F2 12.0 Tf  [(1.- B˙squeda:)] TJ ET
BT 94.344 801.116 Td /F1 12.0 Tf  [( Implica la localizaciÛn de un registro caracterizado por una determinada clave o tambiÈn )] TJ ET
BT 15.000 786.464 Td /F1 12.0 Tf  [(el acceso a todos los registros que cumplan una o m·s condiciones.)] TJ ET
BT 15.000 771.812 Td /F2 12.0 Tf  [(2.- InserciÛn:)] TJ ET
BT 89.688 771.812 Td /F1 12.0 Tf  [( Se trata de aÒadir nuevos registros a la estructura de datos.)] TJ ET
BT 15.000 757.160 Td /F2 12.0 Tf  [(3.- EliminaciÛn:)] TJ ET
BT 103.692 757.160 Td /F1 12.0 Tf  [( Es la operaciÛn de borrado de un registro es la estructura de datos.)] TJ ET
BT 15.000 742.508 Td /F2 12.0 Tf  [(4.- OrdenaciÛn:)] TJ ET
BT 103.020 742.508 Td /F1 12.0 Tf  [( Es la operaciÛn de clasificar los registros conforme a un orden lÛgico determinado \(por )] TJ ET
BT 15.000 727.856 Td /F1 12.0 Tf  [(ejemplo, alfabÈticamente\).)] TJ ET
BT 15.000 698.804 Td /F2 12.0 Tf  [(Ejercicios propuestos:)] TJ ET
BT 15.000 669.752 Td /F2 12.0 Tf  [(1.-)] TJ ET
BT 29.004 669.752 Td /F1 12.0 Tf  [( Desarrolla un programa que sirva para:)] TJ ET
BT 15.000 655.100 Td /F1 12.0 Tf  [(- Solicitar al usuario que ingrese n˙meros, los cuales se guardar·n en una lista. Finalizar al ingresar el )] TJ ET
BT 15.000 640.448 Td /F1 12.0 Tf  [(n˙mero 0, el cual no debe guardarse.)] TJ ET
BT 15.000 625.796 Td /F1 12.0 Tf  [(- A continuaciÛn, solicitar al usuario que ingrese un n˙mero y, si el n˙mero est· en la lista, eliminar su )] TJ ET
BT 15.000 611.144 Td /F1 12.0 Tf  [(primera ocurrencia. Mostrar un mensaje si no es posible eliminar.)] TJ ET
BT 15.000 596.492 Td /F1 12.0 Tf  [(- Recorrer la lista para imprimir la sumatoria de todos los elementos.)] TJ ET
BT 15.000 581.840 Td /F1 12.0 Tf  [(- Solicitar al usuario otro n˙mero y crear una lista con los elementos de la lista original que sean )] TJ ET
BT 528.540 581.840 Td /F1 12.0 Tf  [(menores )] TJ ET
BT 15.000 567.188 Td /F1 12.0 Tf  [(que el n˙mero dado. Imprimir esta nueva lista, iterando por ella.)] TJ ET
BT 15.000 552.536 Td /F1 12.0 Tf  [(- Generar e imprimir una nueva lista que contenga como elementos a tuplas de dos elementos, cada una )] TJ ET
BT 15.000 537.884 Td /F1 12.0 Tf  [(compuesta por un n˙mero de la lista original y la cantidad de veces que aparece en ella. Por ejemplo, si )] TJ ET
BT 15.000 523.232 Td /F1 12.0 Tf  [(la lista original es [5,16,2,5,57,5,2] la nueva lista contendr·: [\(5,3\), \(16,1\), \(2,2\), \(57,1\)])] TJ ET
BT 15.000 494.180 Td /F2 12.0 Tf  [(2.-)] TJ ET
BT 29.004 494.180 Td /F1 12.0 Tf  [( Solicitar al usuario que ingrese los nombres de pila de los alumnos de nivel primario de una escuela, )] TJ ET
BT 15.000 479.528 Td /F1 12.0 Tf  [(finalizando al ingresar ?x?. A continuaciÛn, solicitar que ingrese los nombres de los alumnos de nivel )] TJ ET
BT 15.000 464.876 Td /F1 12.0 Tf  [(secundario, finalizando al ingresar ?x?.)] TJ ET
BT 15.000 450.224 Td /F1 12.0 Tf  [(- Informar los nombres de todos los alumnos de nivel primario y los de nivel secundario, sin repeticiones.)] TJ ET
BT 15.000 435.572 Td /F1 12.0 Tf  [(- Informar quÈ nombres se repiten entre los alumnos de nivel primario y secundario.)] TJ ET
BT 15.000 420.920 Td /F1 12.0 Tf  [(- Informar quÈ nombres de nivel primario no se repiten en los de nivel secundario.)] TJ ET
BT 15.000 391.868 Td /F1 12.0 Tf  [(El alumno debe decidir quÈ estructura de datos es la m·s conveniente para el desarrollo de los )] TJ ET
BT 15.000 377.216 Td /F1 12.0 Tf  [(programas. Algunas de las posibles soluciones a los ejercicios los tenÈis en este )] TJ ET
BT 447.180 377.216 Td /F1 12.0 Tf  [(link)] TJ ET
0.24 w 0 J [  ] 0 d
447.180 375.682 m 465.180 375.682 l S
BT 465.180 377.216 Td /F1 12.0 Tf  [( aunque no )] TJ ET
BT 15.000 362.564 Td /F1 12.0 Tf  [(necesariamente la soluciÛn de los @eggers debe ser igual. )] TJ ET
0.953 0.576 0.224 rg
BT 15.000 317.552 Td /F2 12.0 Tf  [(#HASHTAGS )] TJ ET
BT 92.340 317.552 Td /F4 12.0 Tf  [( \(etiquetas de ayuda para b˙squeda de informaciÛn relevante\))] TJ ET
0.000 0.000 0.000 rg
BT 15.000 286.940 Td /F1 12.0 Tf  [(#estructura-de-datos #array #lista-enlazada #grafo #colas #pilas #·rboles)] TJ ET
0.953 0.576 0.224 rg
BT 15.000 256.328 Td /F2 12.0 Tf  [(LINKS DE INTER…S)] TJ ET
0.000 0.000 0.000 rg
BT 15.000 225.716 Td /F1 12.0 Tf  [(https://es.wikipedia.org/wiki/Estructura_de_datos)] TJ ET
0.24 w 0 J [  ] 0 d
15.000 224.182 m 274.440 224.182 l S
BT 15.000 211.064 Td /F1 12.0 Tf  [(https://www.ecured.cu/Estructura_de_datos)] TJ ET
0.24 w 0 J [  ] 0 d
15.000 209.530 m 247.104 209.530 l S
BT 15.000 196.412 Td /F1 12.0 Tf  [(https://www.youtube.com/watch?v=5k2DWMRTXMM)] TJ ET
0.24 w 0 J [  ] 0 d
15.000 194.878 m 296.736 194.878 l S
BT 15.000 181.760 Td /F1 12.0 Tf  [(http://patriciaemiguel.com/ejercicios/python/2019/03/10/ejercicios-estructuras_datos-python.html)] TJ ET
0.24 w 0 J [  ] 0 d
15.000 180.226 m 526.536 180.226 l S
BT 15.000 167.108 Td /F1 12.0 Tf  [(https://www.ellaberintodefalken.com/2020/02/grafos-con-networkx.html)] TJ ET
0.24 w 0 J [  ] 0 d
15.000 165.574 m 391.812 165.574 l S
BT 15.000 152.456 Td /F1 12.0 Tf  [(http://micaminomaster.com.co/grafo-algoritmo/todo-trabajar-grafos-python/)] TJ ET
0.24 w 0 J [  ] 0 d
15.000 150.922 m 411.132 150.922 l S
0.953 0.576 0.224 rg
BT 15.000 121.844 Td /F2 12.0 Tf  [(DICCIONARIO)] TJ ET
0.000 0.000 0.000 rg
BT 15.000 91.232 Td /F1 12.0 Tf  [(Estructura-de-datos | array | lista-enlazada | grafo | colas | pilas | ·rboles)] TJ ET
0.953 0.576 0.224 rg
BT 15.000 60.620 Td /F2 12.0 Tf  [(PUNTUACI”N)] TJ ET
0.000 0.000 0.000 rg
BT 15.000 30.008 Td /F1 12.0 Tf  [(ProgramaciÛn: 5)] TJ ET
endstream
endobj
31 0 obj
<< /Type /Font
/Subtype /Type1
/Name /F4
/BaseFont /Helvetica-BoldOblique
/Encoding /WinAnsiEncoding
>>
endobj
32 0 obj
<< /Type /Annot
/Subtype /Link
/A 33 0 R
/Border [0 0 0]
/H /I
/Rect [ 447.1800 376.1064 465.1800 388.3164 ]
>>
endobj
33 0 obj
<< /Type /Action
/S /URI
/URI (http://patriciaemiguel.com/ejercicios/python/2019/03/10/ejercicios-estructuras_datos-python.html)
>>
endobj
34 0 obj
<< /Type /Annot
/Subtype /Link
/A 35 0 R
/Border [0 0 0]
/H /I
/Rect [ 15.0000 224.6064 274.4400 236.8164 ]
>>
endobj
35 0 obj
<< /Type /Action
/S /URI
/URI (https://es.wikipedia.org/wiki/Estructura_de_datos)
>>
endobj
36 0 obj
<< /Type /Annot
/Subtype /Link
/A 37 0 R
/Border [0 0 0]
/H /I
/Rect [ 15.0000 209.9544 247.1040 222.1644 ]
>>
endobj
37 0 obj
<< /Type /Action
/S /URI
/URI (https://www.ecured.cu/Estructura_de_datos)
>>
endobj
38 0 obj
<< /Type /Annot
/Subtype /Link
/A 39 0 R
/Border [0 0 0]
/H /I
/Rect [ 15.0000 195.3024 296.7360 207.5124 ]
>>
endobj
39 0 obj
<< /Type /Action
/S /URI
/URI (https://www.youtube.com/watch?v=5k2DWMRTXMM)
>>
endobj
40 0 obj
<< /Type /Annot
/Subtype /Link
/A 41 0 R
/Border [0 0 0]
/H /I
/Rect [ 15.0000 180.6504 526.5360 192.8604 ]
>>
endobj
41 0 obj
<< /Type /Action
/S /URI
/URI (http://patriciaemiguel.com/ejercicios/python/2019/03/10/ejercicios-estructuras_datos-python.html)
>>
endobj
42 0 obj
<< /Type /Annot
/Subtype /Link
/A 43 0 R
/Border [0 0 0]
/H /I
/Rect [ 15.0000 165.9984 391.8120 178.2084 ]
>>
endobj
43 0 obj
<< /Type /Action
/S /URI
/URI (https://www.ellaberintodefalken.com/2020/02/grafos-con-networkx.html)
>>
endobj
44 0 obj
<< /Type /Annot
/Subtype /Link
/A 45 0 R
/Border [0 0 0]
/H /I
/Rect [ 15.0000 151.3464 411.1320 163.5564 ]
>>
endobj
45 0 obj
<< /Type /Action
/S /URI
/URI (http://micaminomaster.com.co/grafo-algoritmo/todo-trabajar-grafos-python/)
>>
endobj
46 0 obj
<< /Type /Page
/Parent 3 0 R
/Contents 47 0 R
>>
endobj
47 0 obj
<<
/Length 230 >>
stream

0.000 0.000 0.000 rg
0.000 0.000 0.000 RG
0.24 w 0 J [  ] 0 d
BT 15.000 830.168 Td /F1 12.0 Tf  [(Redes: 2)] TJ ET
BT 15.000 815.516 Td /F1 12.0 Tf  [(Seguridad: 1)] TJ ET
BT 15.000 800.864 Td /F1 12.0 Tf  [(Algoritmia: 7)] TJ ET
endstream
endobj
xref
0 48
0000000000 65535 f 
0000000008 00000 n 
0000000073 00000 n 
0000000119 00000 n 
0000000357 00000 n 
0000000394 00000 n 
0000000692 00000 n 
0000000823 00000 n 
0000007795 00000 n 
0000007902 00000 n 
0000008014 00000 n 
0000008130 00000 n 
0000009246 00000 n 
0000009570 00000 n 
0000009698 00000 n 
0000009811 00000 n 
0000009939 00000 n 
0000010131 00000 n 
0000010259 00000 n 
0000010359 00000 n 
0000010487 00000 n 
0000010625 00000 n 
0000010753 00000 n 
0000010854 00000 n 
0000010982 00000 n 
0000011120 00000 n 
0000011247 00000 n 
0000011362 00000 n 
0000011488 00000 n 
0000011607 00000 n 
0000011733 00000 n 
0000017563 00000 n 
0000017683 00000 n 
0000017811 00000 n 
0000017959 00000 n 
0000018086 00000 n 
0000018187 00000 n 
0000018314 00000 n 
0000018407 00000 n 
0000018534 00000 n 
0000018629 00000 n 
0000018756 00000 n 
0000018904 00000 n 
0000019031 00000 n 
0000019151 00000 n 
0000019278 00000 n 
0000019403 00000 n 
0000019468 00000 n 
trailer
<<
/Size 48
/Root 1 0 R
/Info 5 0 R
>>
startxref
19750
%%EOF
